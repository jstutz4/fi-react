{"version":3,"sources":["components/video.js","components/article.js","components/articleNav.js","components/articleLinkHelper.js","components/main.js","pages/about.js","pages/save.js","pages/invest.js","pages/gettingStarted.js","App.js","components/navMain.js","index.js"],"names":["video","props","files","forEach","file","push","href","source","download","text","className","title","width","height","src","frameBorder","allow","allowFullScreen","Fragment","sectionCSS","marginTop","backgroundColor","padding","borderRadius","quoteCSS","textAlign","headerCSS","borderTop","borderBottom","article","contents","content","map","section","index","quote","quotes","style","key","articleTitle","Video","absPos","position","top","noBullets","listStyleType","marginLeft","articleNav","children","articleLinkHelper","activeArticle","setActiveArticle","articleLinks","links","activeStyle","id","to","onClick","name","getLink","Main","Article","about","aboutQuery","gql","useState","useQuery","data","loading","error","urlID","match","params","page","articles","nav","filter","art","MainContent","saveQuery","Start","investQuery","invest","startQuery","App","path","component","gettingStarted","save","exact","ulCSS","margin","paddingLeft","navHorizontal","display","navColor","border","float","linkItems","link","item","cache","InMemoryCache","HttpLink","uri","client","ApolloClient","routing","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.201a2264.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nexport default function video(props) {\r\n    const files = []\r\n    if(props.files) {\r\n        props.files.forEach(file => {\r\n        files.push(<a key={file.source} href={file.source} download>{file.text}</a>)\r\n        });\r\n    }\r\n    if(!props.video){\r\n        return <React.Fragment></React.Fragment>\r\n    }\r\n    return (\r\n        <section className=\"video\">\r\n            {/* <section className=\"videoWrapper\"> */}\r\n                <iframe title={props.title} width=\"224\" height=\"126\" src={props.video} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            {/* </section> */}\r\n            <section>\r\n                {files}\r\n            </section>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport Video from './video'\r\n\r\nconst sectionCSS = {\r\n    marginTop: '10vh',\r\n      backgroundColor: 'lightgray',\r\n      padding: '10px 1vw',\r\n      borderRadius: '15px',\r\n  }\r\n\r\nconst quoteCSS = {\r\n    backgroundColor: 'lightgreen',\r\n    padding: '10px 30px',\r\n    textAlign: 'center',\r\n}\r\n\r\nconst headerCSS =\r\n{\r\n    borderTop: 'solid 5px lightgreen',\r\n    borderBottom: 'solid 3px lightgreen',\r\n}\r\n\r\n\r\n\r\nexport default function article(props) {\r\n    if(!props || !props.contents){\r\n        return <section>No Data</section>\r\n    }\r\n    let content = props.contents.map((section,index)=>{\r\n    let quote = props.quotes[index] ? <blockquote  style={quoteCSS}>{props.quotes[index]}</blockquote> : null\r\n    let key = props.articleTitle + index\r\n        return (\r\n            <React.Fragment key={key}>\r\n                <article >{section}</article>\r\n                {quote}\r\n            </React.Fragment>\r\n        )\r\n      })\r\n\r\n    return(\r\n        <section style={sectionCSS}>\r\n            <h1 style={headerCSS}>{props.articleTitle}</h1>\r\n            {Video({...props})}\r\n            {content}\r\n        </section>\r\n    );\r\n}\r\n\r\n/*          <article>\r\n                Lorem ipsum dolor sit amet, usu iusto ridens volumus et, enim verear vim ea, aliquid vivendum no vel. Alia sonet utamur usu id. Vis at fuisset posidonium, liber audire est eu, civibus legendos no per. Vix timeam scripta sensibus ad. Natum probo discere his at.\r\n\r\n                Ea vocent denique explicari pro, sit mundi graecis tractatos at. No paulo posidonium his, id vim quod constituto, sonet lobortis nec ad. Bonorum scaevola argumentum vim cu, sea ex probo fuisset petentium. Everti adipiscing signiferumque sed et. Ea vis omittam omittantur, his no possit periculis, ad mel partiendo inciderint.\r\n            </article>\r\n                <blockquote  style={quoteCSS}>\r\n                    For 50 years, WWF has been protecting the future of nature. The world's leading conservation organization, WWF works in 100 countries and is supported by 1.2 million members in the United States and close to 5 million globally.\r\n                </blockquote>\r\n                <article>\r\n                    An eos esse nonumy efficiantur, omnis elitr dolor nam ad, putant verear inimicus ut quo. Dolor eleifend cu quo. Aliquam blandit comprehensam no nam, his an fabellas adolescens philosophia. Has te mollis tamquam labores. Vim soluta alterum voluptatibus eu.\r\n    \r\n                    Quem sonet dissentiunt ex ius. Ei cum nusquam deleniti indoctum, et duo ipsum deserunt, discere efficiendi philosophia duo in. At quo meliore nonumes, ne laudem doming scaevola pri. Mea no suavitate intellegam signiferumque, ne his nisl rebum deleniti. Ad eam posse diceret, cu his lorem appareat.\r\n    \r\n                    Sed ad harum mediocrem consulatu. Facer dolores complectitur sit te, regione mnesarchum cum no. Periculis vituperatoribus cum et, te atqui senserit vim, te pro case aliquip conceptam. Sed cu soluta tibique, dictas necessitatibus cu ius, ius eros omnesque intellegam et. Veritus appetere mel cu, vis rebum alterum postulant ea, ut rebum liberavisse mediocritatem per. Dictas latine no qui, id eam quot illum impetus, est id tota fastidii repudiare.\r\n                </article> */","import React from 'react'\r\n\r\nconst absPos = {\r\n    position: \"absolute\",\r\n    top: '98px',\r\n    \r\n}\r\n\r\nconst noBullets = {\r\n    listStyleType: \"none\",\r\n    backgroundColor: 'darkgrey',\r\n    padding: '0',\r\n    marginLeft: '16px',\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default function articleNav(props) {\r\n    return (\r\n        <nav style={absPos} className=\"articleNav\">\r\n            <ul style={noBullets}>\r\n                <li>\r\n                    {props.children}\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function articleLinkHelper(props, activeArticle, setActiveArticle){\r\n    let articleLinks = []\r\n\r\n    if(props && props.links){\r\n      props.links.forEach((article) => {\r\n        let activeStyle = \"\"\r\n          if(activeArticle === article.id){\r\n            activeStyle = \"activeArticle\"\r\n          }\r\n          articleLinks.push(getLink(article, activeStyle, setActiveArticle))\r\n        })\r\n\r\n      return(\r\n          <React.Fragment>\r\n              {articleLinks}\r\n          </React.Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nfunction getLink(article, activeStyle, setActiveArticle){\r\n    return(\r\n            <Link key={article.name} \r\n                  className={activeStyle}\r\n                  to={article.to} \r\n                  onClick={() => setActiveArticle(article.id)}>\r\n                {article.name}\r\n            </Link>\r\n    )\r\n}","import Article from '../components/article'\r\nimport ArticleNav from '../components/articleNav'\r\nimport articleLinkHelper from '../components/articleLinkHelper'\r\n\r\nexport default function Main(props, articleNav, article, activeArticle, setActiveArticle){\r\n    return(\r\n        <section>\r\n        <ArticleNav>\r\n            {articleLinkHelper({\"links\": articleNav}, activeArticle, setActiveArticle)}\r\n        </ArticleNav>\r\n        {Article(article)}\r\n        </section>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport MainContent from '../components/main'\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\nexport default function about(props) {\r\n  const aboutQuery = gql`\r\n  query aboutQuery {\r\n    page(screenName:\"about\") {\r\n      id,\r\n      screenName,\r\n      articles {\r\n        id,\r\n        articleTitle,\r\n        video,\r\n        videoTitle,\r\n        files {\r\n          id,\r\n          source,\r\n          text\r\n        },\r\n        contents,\r\n        quotes,\r\n      },\r\n    }\r\n    \r\n    nav(id:4){\r\n      id,\r\n      to,\r\n      name,\r\n    }\r\n\r\n  }`\r\n  const initialState = 10000\r\n  const [activeArticle, setActiveArticle] = useState(initialState);\r\n  \r\n  let { data, loading, error }  = useQuery(aboutQuery);\r\n  \r\n  if(loading) return <section>No Data</section>\r\n  if(error) return <section>we have an error</section>\r\n  \r\n  const urlID = props.match.params.id\r\n\r\n  //if the url param id was changed then update active article\r\n  if( urlID && activeArticle != urlID){\r\n    setActiveArticle(props.match.params.id)\r\n  } //if url param id is null and first render\r\n  else if(!urlID && activeArticle == initialState){\r\n    setActiveArticle(data.page.articles[0].id)\r\n  }\r\n  \r\n  const articleNav = data.nav\r\n  const article = data.page.articles.filter(art => art.id == activeArticle)[0]\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {MainContent(props,articleNav,article, activeArticle, setActiveArticle)}\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MainContent from '../components/main'\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\n\r\n\r\nconst saveQuery= gql`\r\nquery saveQuery {\r\n  page(screenName:\"save\") {\r\n    id,\r\n    screenName,\r\n    articles {\r\n      id,\r\n      articleTitle,\r\n      video,\r\n      videoTitle,\r\n      files {\r\n        id,\r\n        source,\r\n        text\r\n      },\r\n      contents,\r\n      quotes,\r\n    },\r\n  }\r\n  nav(id:2){\r\n    id,\r\n    to,\r\n    name,\r\n  }\r\n}\r\n`\r\n\r\nexport default function Start(props) {\r\n  // set to some junk value\r\n  const initialState = 10000\r\n  const [activeArticle, setActiveArticle] = useState(initialState);\r\n  \r\n  let { data, loading, error }  = useQuery(saveQuery);\r\n  \r\n  if(loading) return <section>No Data</section>\r\n  if(error) return <section>we have an error</section>\r\n  \r\n  const urlID = props.match.params.id\r\n\r\n  //if the url param id was changed then update active article\r\n  if( urlID && activeArticle != urlID){\r\n    setActiveArticle(props.match.params.id)\r\n  } //if url param id is null and first render\r\n  else if(!urlID && activeArticle == initialState){\r\n    setActiveArticle(data.page.articles[0].id)\r\n  }\r\n  \r\n  const articleNav = data.nav\r\n  const article = data.page.articles.filter(art => art.id == activeArticle)[0]\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {MainContent(props,articleNav,article, activeArticle, setActiveArticle)}\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport MainContent from '../components/main'\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\n\r\nconst investQuery = gql`\r\n  query investQuery {\r\n    page(screenName:\"invest\") {\r\n      id,\r\n      screenName,\r\n      articles {\r\n        id,\r\n        articleTitle,\r\n        video,\r\n        videoTitle,\r\n        files {\r\n          id,\r\n          source,\r\n          text\r\n        },\r\n        contents,\r\n        quotes,\r\n      },\r\n    }\r\n    \r\n    nav(id:3){\r\n      id,\r\n      to,\r\n      name,\r\n    }\r\n\r\n  }`\r\n\r\n\r\nexport default function invest(props) {\r\n  // set to some junk value\r\n  const initialState = 10000\r\n  const [activeArticle, setActiveArticle] = useState(initialState);\r\n  \r\n  let { data, loading, error }  = useQuery(investQuery);\r\n  \r\n  if(loading) return <section>No Data</section>\r\n  if(error) return <section>we have an error</section>\r\n  \r\n  const urlID = props.match.params.id\r\n\r\n  //if the url param id was changed then update active article\r\n  if( urlID && activeArticle != urlID){\r\n    setActiveArticle(props.match.params.id)\r\n  } //if url param id is null and first render\r\n  else if(!urlID && activeArticle == initialState){\r\n    setActiveArticle(data.page.articles[0].id)\r\n  }\r\n  \r\n  const articleNav = data.nav\r\n  const article = data.page.articles.filter(art => art.id == activeArticle)[0]\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {MainContent(props, articleNav,article, activeArticle, setActiveArticle)}\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MainContent from '../components/main'\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\nexport default function Start(props) {\r\n  \r\n  const startQuery = gql`\r\n  query justAName {\r\n    page(screenName:\"start\") {\r\n      id,\r\n      screenName,\r\n      articles {\r\n        id,\r\n        articleTitle,\r\n        video,\r\n        videoTitle,\r\n        files {\r\n          id,\r\n          source,\r\n          text\r\n        },\r\n        contents,\r\n        quotes,\r\n      },\r\n    }\r\n    \r\n    nav(id:1){\r\n      id,\r\n      to,\r\n      name,\r\n    }\r\n\r\n  }`\r\n  const initialState = 10000\r\n  const [activeArticle, setActiveArticle] = useState(initialState);\r\n  \r\n  let { data, loading, error }  = useQuery(startQuery);\r\n  \r\n  if(loading) return <section>No Data</section>\r\n  if(error) return <section>we have an error</section>\r\n  \r\n  const urlID = props.match.params.id\r\n\r\n  //if the url param id was changed then update active article\r\n  if( urlID && activeArticle != urlID){\r\n    setActiveArticle(props.match.params.id)\r\n  } //if url param id is null and first render\r\n  else if(!urlID && activeArticle == initialState){\r\n    setActiveArticle(data.page.articles[0].id)\r\n  }\r\n  \r\n  const articleNav = data.nav\r\n  const article = data.page.articles.filter(art => art.id == activeArticle)[0]\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {MainContent(props,articleNav,article, activeArticle, setActiveArticle)}\r\n    </React.Fragment>\r\n  );\r\n}","import { Route, Switch } from 'react-router-dom'\r\nimport './App.css';\r\nimport about from './pages/about'\r\nimport save from './pages/save'\r\nimport invest from './pages/invest'\r\nimport gettingStarted from './pages/gettingStarted'\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/start/:id?\" component={gettingStarted} />\r\n      <Route path=\"/save/:id?\" component={save} />\r\n      <Route exact path=\"/invest/:id?\" component={invest} />\r\n      <Route exact path=\"/about\" component={about} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\nconst ulCSS = {\r\n    listStyleType: \"none\",\r\n    margin: \"0\",\r\n    paddingLeft: \"0\",\r\n    textAlign: 'center',\r\n}\r\n\r\nconst navHorizontal = {\r\n    display: 'inline-block',\r\n    padding: \"0 7px\",\r\n}\r\n\r\nconst navColor = {\r\n    border: \"3px green solid\",\r\n    borderRadius: \"6px\",\r\n    float: \"left\",\r\n    backgroundColor: \"rgba(1,100,32, .9)\",\r\n    padding: \"3px\",\r\n    marginTop: \"5vh\",\r\n}\r\n\r\nconst mainNavNames = \r\n[\r\n    {name:\"Getting Started\", link:\"/start\"}, \r\n    {name:\"Saving\", link:`/save`},\r\n    {name:\"Investing\", link:\"/invest\"},\r\n    {name:\"About\", link:\"/about\"},\r\n]\r\n\r\nconst linkItems = [];\r\n\r\nmainNavNames.forEach((item) => {\r\n    linkItems.push(<li key={item.name} style={navHorizontal}>\r\n        <Link to={item.link}>{item.name}</Link>\r\n        </li>);\r\n})\r\n\r\n\r\nexport default function NavHeader(props) {\r\n\r\n    return(\r\n        <nav style={navColor}>\r\n            <ul style={ulCSS}>\r\n                {linkItems}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// graph QL\r\nimport {ApolloClient} from 'apollo-client';\r\nimport {InMemoryCache} from 'apollo-cache-inmemory';\r\nimport {HttpLink} from 'apollo-link-http';\r\nimport {ApolloProvider} from '@apollo/react-hooks'\r\n\r\n\r\n// components\r\nimport NavHeader from './components/navMain'\r\n\r\n\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n  \r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n})\r\n\r\nconst routing = (\r\n<React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n      <div className=\"center\">\r\n            {NavHeader()}\r\n            <App></App>\r\n            {/* {Footer()} */}\r\n        </div>\r\n      </BrowserRouter>\r\n      </ApolloProvider>\r\n  </React.StrictMode>\r\n)\r\nReactDOM.render(\r\n  routing,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}